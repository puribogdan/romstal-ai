{
  "name": "Evolio - Romstal",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d40da45a-f20b-464b-8b5e-8af5311b6743",
              "leftValue": "={{ $json[\"query\"][\"hub.verify_token\"] }}",
              "rightValue": "MY_SECRET_12345",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [336, 256],
      "id": "1c8d95ff-4a11-4158-91f1-13f7b8f4ee95",
      "name": "Verify token"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=invalid verify token",
        "options": {
          "responseCode": 403
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [640, 368],
      "id": "3e621615-95bb-4b9f-95d1-7975becc44f4",
      "name": "Respond 403 (bad token)"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json[\"query\"][\"hub.challenge\"] }}\n",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [640, 112],
      "id": "a915755b-736f-4803-ade8-9c3143f5a7aa",
      "name": "Respond 200 (challenge)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b94560de-9de2-4cec-a307-4ef8f55d9329",
              "leftValue": "={{ $json.body.entry[0].changes[0].value.messages }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [272, -224],
      "id": "1c02a51e-5fd0-499a-b34f-c5364817fe15",
      "name": "If - Has Messages?"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "ok",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [656, -352],
      "id": "88fc2d6f-a6f4-4eaf-b369-88daed58a5d2",
      "name": "Ack 200 (no messages)"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "{ \"status\": \"ok\" }\n",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [1920, -128],
      "id": "9f2641ec-3725-4272-9120-ef0170b84a86",
      "name": "Ack 200 (message received)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9fe546dd-476e-4e85-beb3-6f2cd16673f5",
              "leftValue": "={{ $json.body }}",
              "rightValue": "subscribe",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [-320, -32],
      "id": "ab8973c9-436a-4190-913f-968c2f03290c",
      "name": "Is Verification?"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "path": "whatsapp-evolio",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [-784, -32],
      "id": "ddc3ed27-77b3-4ecc-a7dd-f4c8e989cf1b",
      "name": "WA Webhook",
      "webhookId": "857fb1a6-2c1c-4dfa-8ad4-647b2e4b6339"
    },
    {
      "parameters": {
        "jsCode": "// Support BOTH shapes:\n// A) { body: { entry[0].changes[0].value … } }\n// B) { entry[0].changes[0].value … } (already “unwrapped” upstream)\n\nconst entry0 =\n  $json.body?.entry?.[0] ??\n  $json.entry?.[0] ??\n  null;\n\nconst change0 =\n  entry0?.changes?.[0] ??\n  $json.changes?.[0] ??   // in case an upstream node already drilled down to \"changes\"\n  null;\n\nconst value = change0?.value ?? $json.value ?? {};\nconst messages = Array.isArray(value.messages) ? value.messages : [];\nconst contact  = Array.isArray(value.contacts) ? value.contacts[0] ?? {} : {};\nconst phoneId  = value.metadata?.phone_number_id ?? null;\n\nconst out = [];\n\nfor (const msg of messages) {\n  const tsIso = msg.timestamp\n    ? new Date(parseInt(msg.timestamp, 10) * 1000).toISOString()\n    : null;\n\n  out.push({\n    json: {\n      wa_message_id: msg.id || null,\n      wa_type: msg.type || null,\n      wa_text: msg.text?.body ?? null,\n      wa_from: msg.from ?? contact.wa_id ?? null,\n      wa_profile_name: contact.profile?.name ?? null,\n      wa_phone_number_id: phoneId,\n      wa_timestamp: tsIso,\n      // store ONLY the logical WA payload for debugging:\n      raw: value\n    }\n  });\n}\n\n// If no messages array, still return one item to make the flow obvious\nif (!out.length) {\n  return [{ json: { note: \"no messages[] in payload\", raw: value } }];\n}\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [656, -128],
      "id": "4ac5f69f-a479-4558-ac81-33966a2e5fb9",
      "name": "Normalize WA Payload"
    },
    {
      "parameters": {
        "tableId": "wa_messages",
        "dataToSend": "autoMapInputData"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1184, -128],
      "id": "40608692-e04a-4af7-977e-a1da9bd59cda",
      "name": "Insert into wa_messages",
      "credentials": {
        "supabaseApi": {
          "id": "ABhVzcq1EYZZCV7g",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://phosphoreted-bolometrically-fermin.ngrok-free.dev/new-message",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Webhook-Token",
              "value": "super-simple-secret"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "={{$json.id}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1520, -128],
      "id": "9235ba66-7b0a-42b5-930a-ed098efc5f7b",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/wa-outbound",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [-816, 576],
      "id": "e5c7ec53-63d4-4df1-8274-3fb966c8390f",
      "name": "WA Webhook1",
      "webhookId": "857fb1a6-2c1c-4dfa-8ad4-647b2e4b6339"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v21.0/{{ $json.wa_phone_number_id || $json.phone_number_id || '848297468357203' }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAA7qrtCxAt0BPhzyvQyZBZC8fsZCHfWUPizVubATVTBIZAzre66L7nxCvzZCsCTwj9bqEf0dDSHepQ5ZA5gMJ7dnW88ZAWMMbMZCJFYtVO32ttLaXVge281aUcT0tMKnghIoI67cgye8PkxpmaSwrPQRHIgv07HLv0MmbQ9p5TTAiIM5Bp7LvqclDXqYeYfxgVed48U2npPZAfmA1ZAklamCRnivGEVziu1Vza9pwACtCrBvZAXALRhnwmMnvokZBIgaTgZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"to\": \"={{ $json.body.phone_number }}\",\n  \"type\": \"text\",\n  \"text\": { \"body\": \"={{ $json.body.message }}\" }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-608, 576],
      "id": "82c66b95-4874-4792-81dd-ca0f2a46f54a",
      "name": "HTTP Request1"
    }
  ],
  "pinData": {
    "WA Webhook1": [
      {
        "json": {
          "headers": {
            "host": "evolioai.app.n8n.cloud",
            "user-agent": "curl/8.13.0",
            "content-length": "81",
            "accept": "*/*",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "2a02:2f0e:2206:8700:d2ec:833b:4a05:a9b2",
            "cf-ew-via": "15",
            "cf-ipcountry": "RO",
            "cf-ray": "988d586d96a1053d-OTP",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-forwarded-for": "2a02:2f0e:2206:8700:d2ec:833b:4a05:a9b2, 162.158.19.234",
            "x-forwarded-host": "evolioai.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-80-5fc4f59987-jxvcn",
            "x-is-trusted": "yes",
            "x-real-ip": "2a02:2f0e:2206:8700:d2ec:833b:4a05:a9b2"
          },
          "params": {},
          "query": {},
          "body": {
            "phone_number": "+407xxxxxxxx",
            "message": "Salut! Test outbound din curl 🚀"
          },
          "webhookUrl": "https://workflow.jiona.ai/webhook/wa-outbound",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Verify token": {
      "main": [
        [
          {
            "node": "Respond 200 (challenge)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond 403 (bad token)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If - Has Messages?": {
      "main": [
        [
          {
            "node": "Ack 200 (no messages)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normalize WA Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ack 200 (message received)": {
      "main": [[]]
    },
    "Respond 200 (challenge)": {
      "main": [[]]
    },
    "Is Verification?": {
      "main": [
        [
          {
            "node": "Verify token",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If - Has Messages?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WA Webhook": {
      "main": [
        [
          {
            "node": "Is Verification?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Verification?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize WA Payload": {
      "main": [
        [
          {
            "node": "Insert into wa_messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into wa_messages": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Ack 200 (message received)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WA Webhook1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "34844357-3366-4753-9077-657450927084",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "15da6aa8ba7473803efdf867a8f11184ecd959f25be6b09e43f89a099e4c7548"
  },
  "id": "0vjiIVVX7LYO01h8",
  "tags": []
}
